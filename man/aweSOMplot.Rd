% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_panel_functions.R
\name{aweSOMplot}
\alias{aweSOMplot}
\title{Interactive SOM visualizations}
\usage{
aweSOMplot(
  som,
  type = c("Hitmap", "UMatrix", "Radar", "Barplot", "Boxplot", "Star", "Line", "Color",
    "Pie", "CatBarplot"),
  data = NULL,
  variables = NULL,
  superclass = NULL,
  obsNames = NULL,
  scales = c("contrast", "range", "same"),
  values = c("mean", "median", "prototypes"),
  size = 400,
  palsc = c("Set3", "viridis", "grey", "rainbow", "heat", "terrain", "topo", "cm",
    rownames(RColorBrewer::brewer.pal.info)),
  palvar = c("viridis", "grey", "rainbow", "heat", "terrain", "topo", "cm",
    rownames(RColorBrewer::brewer.pal.info)),
  palrev = FALSE,
  boxOutliers = TRUE,
  pieEqualSize = FALSE,
  elementId = NULL
)
}
\arguments{
\item{som}{```kohonen``` object, a SOM created by the ```som``` function.}

\item{type}{character, the plot type. The default "Hitmap" is a population
map. "UMatrix" plots the average distance of each cell to its neighbors, on
a color scale. "Radar", "Barplot", "Boxplot", "Star" and "Line" are for
numeric variables. "Color" (heat map) is for a single numeric variable.
"Pie" (pie chart) and "CatBarplot" are for a single categorical (factor)
variable.}

\item{data}{data.frame containing the variables to plot. This is typically
not the training data, but rather the unscaled original data, as it is
easier to read the results in the original units, and this allows to plot
extra variables not used in training. If not provided, the training data is
used.}

\item{variables}{character vector containing the names of the variable(s) to
plot. The selected variables must be numeric for types "Radar", "Barplot",
"Boxplot", "Star", "Color" and "Line", or factor for types "Pie" and
"CatBarplot". If not provided, all columns of data will be selected. If a 
numeric variable is provided to a "Pie" or "CatBarplot", it will be split 
into a maximum of 30 classes.}

\item{superclass}{integer vector, the superclass of each cell of the SOM.}

\item{obsNames}{character vector, names of the observations to be displayed
when hovering over the cells of the SOM. Must have a length equal to the
number of data rows. If not provided, the row names of data will be used.}

\item{scales}{character, controls the scaling of the variables on the plot.
The default "constrast" maximizes the displayed contrast by scaling the
displayed heights of each variable from minimum to maximum of the displayed
value. Alternatively, "range" uses the minimum and maximum of the
observations for each variable, and "same" displays all variables on the
same scale, using the global minimum and maximum of the data.}

\item{values}{character, the type of value to be displayed. The default
"mean" uses the observation means (from data) for each cell. Alternatively,
"median" uses the observation medians for each cell, and "prototypes" uses
the SOM's prototypes values.}

\item{size}{integer, plot size, in pixels. Default 400.}

\item{palsc}{character, the color palette used to represent the superclasses
as background of the cells. Default is "Set3". Can be "viridis", "grey",
"rainbow", "heat", "terrain", "topo", "cm", or any palette name of the
RColorBrewer package.}

\item{palvar}{character, the color palette used to represent the variables.
Default is "viridis", available choices are the same as the ones for palsc.}

\item{palrev}{logical, whether color palette for variables is reversed.
Default is FALSE.}

\item{boxOutliers}{logical, whether outliers in "Boxplot" are displayed.
Default is TRUE.}

\item{pieEqualSize}{logical, whether "Pie" should display pies of equal size.
The default FALSE displays pies with areas proportional to the number of
observations in the cells.}

\item{elementId}{user-defined elementId of the widget, can be useful for
user extensions when embedding the result in an html page.}
}
\value{
Returns an object of class htmlwidget.
}
\description{
Plot interactive visualizations of self-organizing maps (SOM), as an html
page. The plot can represent general map informations, or selected
categorical or numeric variables (not necessarily the ones used during
training). Hover over the map to focus on the selected cell or variable, and
display further information.
}
\examples{
## Build training data
dat <- iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]
### Scale training data
dat <- scale(dat)
## Train SOM
### RNG Seed (for reproducibility)
### Initialization (PCA grid)
init <- aweSOM::somInit(dat, 4, 4)
ok.som <- kohonen::som(dat, grid = kohonen::somgrid(4, 4, 'hexagonal'),
                       rlen = 100, alpha = c(0.05, 0.01),
                       radius = c(6.08,-6.08), init = init,
                       dist.fcts = 'sumofsquares')
## Group cells into superclasses (PAM clustering)
superclust <- cluster::pam(ok.som$codes[[1]], 2)
superclasses <- unname(superclust$clustering)

# Plots for numerical variables and population map ('hitmap')
variables <- c("Sepal.Length", "Sepal.Width",  "Petal.Length", "Petal.Width")
#Hitmap
aweSOM::aweSOMplot(ok.som = ok.som, ok.sc = superclasses, ok.data = iris,
                   graphType = 'Hitmap', plotSize = 100)
#Radar
aweSOM::aweSOMplot(ok.som = ok.som, ok.sc = superclasses, ok.data = iris,
                   graphType = 'Radar', plotVarMult = variables,
                   plotSize = 100)

#Barplot (numeric variables)
aweSOM::aweSOMplot(ok.som = ok.som, ok.sc = superclasses, ok.data = iris,
                   graphType = 'Barplot', plotVarMult = variables,
                    plotSize = 100)

# Plots for categorial variables
#Pie ('Pie')
aweSOMplot(ok.som = ok.som, ok.sc = superclasses, ok.data = ok.data,
           graphType = 'Pie',  plotVarOne = 'species', plotSize = 400)

#Barplot (categorical variables)
aweSOMplot(ok.som = ok.som, ok.sc = superclasses, ok.data = ok.data,
           graphType = 'CatBarplot',  plotVarOne = 'species', plotSize = 400)                       
}
